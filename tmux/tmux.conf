# unbind some default keybindings
unbind C-b

# set prefix key to ctrl-@ # this is how we bind ctrl-space
set -g prefix C-@
bind C-@ send prefix

setw -g mode-keys vi
bind p paste-buffer

# start first window and pane at 1, not zero
set -g base-index 1
# lower command delay
set -g escape-time 0

# bind r to reloading the config file
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config file."
bind M source-file ~/.tmux/dev
source-file ~/.tmux/tmuxlinefile

# better mnemonics for splitting panes!
bind | split-window -h
bind - split-window -v

# shift-movement keys will resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# window switching (-n: no prior escape seq)
bind -r a prev
bind -r s next
bind -r j new-window
bind -n S-left swap-window -t -1
bind -n S-right swap-window -t +1
bind -r , command-prompt "rename-window %%"

# disable mouse support (at least while we're learning)
setw -g mode-mouse off
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off

# transparency
set -g status-bg default
# turn on 256 color support in tmux
set -g default-terminal "screen-256color"
set -g status-interval 1
set-option -g status-utf8 on
set-option -g visual-activity on
# set -g status-right-length 128
# set -g status-right "#H #[fg=green]#(/sbin/ifconfig|grep -oP \"inet addr:\\\\d+.\\\\d+.\\\\d+.\\\\d+\"|grep -Ev \":169.254|:127.0.0.1\"|cut -d: -f2)"

set-option -g renumber-windows on
setw -g automatic-rename on
bind R                                      \
    move-window -r\;                        \
    display-message "Windows reordered..."

# Smart pane switching with awareness of vim splits
# # See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
