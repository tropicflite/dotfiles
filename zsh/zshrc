# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="clean"
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(archlinux vi-mode web-search zsh-syntax-highlighting)
# User configuration
# export MANPATH="/usr/local/man:$MANPATH"

export PATH=$HOME/bin:/usr/local/bin:$PATH
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
 if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   export EDITOR='vim'
 fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
bindkey -v
export KEYTIMEOUT=1
alias ....="cd ../../.."
alias ...="cd ../.."
alias ..="cd .."
alias acs="apt-cache search"
alias beep="paplay /usr/share/sounds/freedesktop/stereo/message-new-instant.oga"
alias c="clear"
alias cdc="cd && clear"
alias ding="paplay /usr/share/sounds/freedesktop/stereo/complete.oga"
alias h="history"
alias l="ls --group-directories-first"
alias ll="ls -aF --group-directories-first"
alias lll="ls -aFl --group-directories-first"
alias make="grc -es make"
alias man="nman"
alias metar="curl http://weather.noaa.gov/pub/data/observations/metar/stations/CYYZ.TXT"
alias myip="lynx -dump -hiddenlinks=ignore -nolist http://checkip.dyndns.org:8245/ | awk '{ print \$4 }' | sed '/^$/d; s/^[ ]*//g; s/[ ]*$//g'"
alias nautilus="nautilus --browser --no-desktop"
alias net="sudo dhcpcd eno1"
alias vpn="sudo openvpn /home/matt/Nord/us322.nordvpn.com.udp1194.ovpn"
alias p="pianobar"
alias pf="pkill firefox"
alias po="sudo poweroff"
alias q="exit"
alias :q="exit"
alias re="sudo reboot"
alias rm="rm"
alias s="sudo "
alias scp="rsync --rsh=ssh --archive --append --human-readable --progress --times"
alias sudo="sudo "
alias taf="curl http://weather.noaa.gov/pub/data/observations/metar/stations/CYYZ.TXT"
alias sl="find . -type l -ls" # finds all the symlinks in a directory
alias sv="sudo vim"
alias u="uname -a"
alias usb="sudo mount -o gid=users,fmask=113,dmask=002 /dev/sdb1 ~/media/usb"
alias v3="vim ~/.i3/config"
alias v="vim"
alias vd="vim ~/.vimrc ~/.vimperatorrc ~/.Xresources ~/.muttrc ~/.i3/i3config ~/.zshrc"
alias vm="vim ~/.muttrc"
alias vv="vim ~/.vimrc"
alias vx="vim ~/.Xresources"
alias vz="vim ~/.zshrc"
alias wq="exit"
alias :wq="exit"
alias wx="wxmatt.sh cyyz && echo ."
alias zathura="NO_AT_BRIDGE=1 zathura"
bindkey "^R" history-incremental-pattern-search-backward
bindkey -v
export KEYTIMEOUT=20

function pygmentize_cat {
  for arg in "$@"; do
    pygmentize -g "${arg}" 2> /dev/null || /bin/cat "${arg}"
  done
}
command -v pygmentize > /dev/null && alias cat=pygmentize_cat

# do an ls after every successful cd
function cd {
    builtin cd "$@" && ll
}

extract() {
    local c e i

    (($#)) || return

    for i; do
        c=''
        e=1

        if [[ ! -r $i ]]; then
            echo "$0: file is unreadable: \`$i'" >&2
            continue
        fi

        case $i in
            *.t@(gz|lz|xz|b@(2|z?(2))|a@(z|r?(.@(Z|bz?(2)|gz|lzma|xz)))))
                   c='bsdtar xvf';;
            *.7z)  c='7z x';;
            *.Z)   c='uncompress';;
            *.bz2) c='bunzip2';;
            *.exe) c='cabextract';;
            *.gz)  c='gunzip';;
            *.rar) c='unrar x';;
            *.xz)  c='unxz';;
            *.zip) c='unzip';;
            *)     echo "$0: unrecognized file extension: \`$i'" >&2
                   continue;;
        esac

        command $c "$i"
        e=$?
    done

    return $e
}

# recursive mkdir and cd if successful
function mkcd {
    mkdir -p "$@" && builtin cd "$@"
}
function nman {
    if [[ -z $* ]]; then
        echo "What manual page do you want?"
        return
    fi
    local tmp=$IFS
    IFS=$'\n' out=($(command man -w $* 2>&1))
    local code=$?
    IFS=$tmp
    if [[ ${#out[@]} > 1 ]]; then
        echo "Too many manpages"
        return
    elif [[ $code != 0 ]]; then
        echo "No manual entry for $*"
        return
    fi
    vim -c "Nman $*"
}
compdef nman="man"
pi=$(echo "scale=10; 4*a(1)" | bc -l)

PATH="/home/matt/perl5/bin${PATH+:}${PATH}"; export PATH;
PERL5LIB="/home/matt/perl5/lib/perl5${PERL5LIB+:}${PERL5LIB}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/matt/perl5${PERL_LOCAL_LIB_ROOT+:}${PERL_LOCAL_LIB_ROOT}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/matt/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/matt/perl5"; export PERL_MM_OPT;
